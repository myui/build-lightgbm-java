name: Build artifacts

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+*'

jobs:
  create_release:
    name: Create Github release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build_on_ubuntu:
    name: Build artifacts for Linux
    runs-on: ubuntu-latest
    container:
      image: ubuntu:trusty
    needs: create_release
    steps:
      - name: checkout Github repository
        uses: actions/checkout@v2
      - name: install prerequisites
        run: |
          apt-get update
          apt-get --no-install-recommends -y install software-properties-common python-software-properties
          add-apt-repository -y ppa:roblib/ppa
          add-apt-repository -y ppa:ubuntu-toolchain-r/test
          apt-get update
          apt-get install --no-install-recommends -y binutils git g++-5 make cmake3 cmake3-data libpthread-stubs0-dev swig3.0 openjdk-7-jdk
      - name: build artifacts
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
          CC=`which gcc-5` CXX=`which g++-5` LIGHTGBM_VERSION=`cat LIGHTGBM_VERSION` sh scripts/build_linux.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ./LightGBM/build/lightgbm-*.jar
      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions
        with:
          release_id: ${{ needs.create_release.outputs.release_id }}
          assets_path: ./LightGBM/build/assets

  build_on_osx:
    name: Build artifacts for Mac OSX
    runs-on: macos-latest # macos-10.15
    needs: create_release
    steps:
      - name: checkout Github repository
        uses: actions/checkout@v2
      - name: build artifacts
        run: |
          LIGHTGBM_VERSION=`cat LIGHTGBM_VERSION` sh scripts/build_osx.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ./LightGBM/lib_lightgbm.*.dylib
      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions
        with:
          release_id: ${{ needs.create_release.outputs.release_id }}
          assets_path: ./LightGBM/build/assets

  publish_mvn_package:
    name: Public Maven packages to Github Packages
    runs-on: ubuntu-latest
    needs: [build_on_ubuntu, build_on_osx]
    steps:
      - name: checkout Github repository
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: assets
      - name: Update jar to include OSX native libraries
        run: |
          LIGHTGBM_VERSION=`cat LIGHTGBM_VERSION`
          TAG_VERSION=`echo ${{ github.ref }} || sed -e 's/^v//'`
          cd assets
          mv lightgbm-${LIGHTGBM_VERSION}.jar lightgbm-${TAG_VERSION}.jar
          mkdir -p com/microsoft/ml/lightgbm/osx/x86_64
          mv lib_lightgbm.*.dylib com/microsoft/ml/lightgbm/osx/x86_64
          jar uf lightgbm-${TAG_VERSION}.jar com/microsoft/ml/lightgbm/osx/x86_64/lib_lightgbm.dylib
          jar uf lightgbm-${TAG_VERSION}.jar com/microsoft/ml/lightgbm/osx/x86_64/lib_lightgbm_swig.dylib
          jar tf lightgbm-${TAG_VERSION}.jar | grep lib_lightgbm
          cd ..
      - name: Publish to GitHub Packages Apache Maven
        run: |
          TAG_VERSION=`echo ${{ github.ref }} || sed -e 's/^v//'`
          mvn versions:set -f lightgbm.pom -DnewVersion=${TAG_VERSION} -DgenerateBackupPoms=false
          mvn org.apache.maven.plugins:maven-gpg-plugin:1.6:sign-and-deploy-file -s gh-settings.xml \
            -Dgpg.executable=scripts/gpghack.sh \
            -DpomFile=lightgbm.pom \
            -DrepositoryId=github \
            -Durl=https://maven.pkg.github.com/myui/build-lightgbm-java \
            -Dfile=assets/lightgbm-${TAG_VERSION}.jar \
            -Dsources=assets/lightgbm-${TAG_VERSION}-sources.jar \
            -Djavadoc=assets/lightgbm-${TAG_VERSION}-javadoc.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions
